{"version":3,"sources":["components/SearchBar.js","components/Crypto.js","components/Cryptos.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","_ref","onChange","react_default","a","createElement","className","type","placeholder","Crypto","crypto","color","price_change_percentage_24h","includes","console","log","market_cap_rank","src","image","alt","id","symbol","current_price","toLocaleString","style","market_cap","Cryptos","cryptos","map","cry","index","components_Crypto","key","App","_useState","useState","_useState2","Object","slicedToArray","setCryptos","_useState3","_useState4","search","setSearch","_useState5","_useState6","filteredCoins","setFilteredCoins","_useState7","_useState8","allCoins","setAllCoins","useEffect","axios","get","then","res","data","components_SearchBar","e","target","value","filter","name","toLowerCase","components_Cryptos","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"2PAiBeA,EAdG,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SAKlB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,SAAQC,UAAU,QAAQC,KAAK,OAAOL,SAAUA,EAAUM,YAAY,qBCY/DC,EArBA,SAAAR,GAAc,IAAZS,EAAYT,EAAZS,OAEXC,GADYD,EAAOE,4BAA4B,IAC9BC,SAAS,KAAO,MAAQ,QAE7C,OADAC,QAAQC,IAAIL,GAEVP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQI,EAAOM,iBAE7Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKY,IAAKP,EAAOQ,MAAOC,IAAI,GAAGb,UAAU,QACxCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQI,EAAOU,KAG5BjB,EAAAC,EAAAC,cAAA,UAAMK,EAAOW,QACblB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,IAAwBI,EAAOY,cAAcC,eAAe,UAC5DpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASkB,MAAO,CAACb,MAAMA,IAASD,EAAOE,4BAArD,KACAT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,IAAqBI,EAAOe,WAAWF,eAAe,YCQ/CG,EAtBC,SAAAzB,GAAe,IAAb0B,EAAa1B,EAAb0B,QAIhB,OAIExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEbqB,EAAQC,IAAI,SAACC,EAAKC,GAAN,OAEV3B,EAAAC,EAAAC,cAAC0B,EAAD,CAAQC,IAAKF,EAAOpB,OAAQmB,QCoCrBI,MA3Cf,WAAe,IAAAC,EAEiBC,mBAAS,IAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENP,EAFMS,EAAA,GAEGG,EAFHH,EAAA,GAAAI,EAGeL,mBAAS,IAHxBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGNE,EAHMD,EAAA,GAGEE,EAHFF,EAAA,GAAAG,EAI6BT,mBAAS,IAJtCU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAINE,EAJMD,EAAA,GAISE,EAJTF,EAAA,GAAAG,EAKmBb,oBAAS,GAL5Bc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAKNE,EALMD,EAAA,GAKIE,EALJF,EAAA,GA8Bb,OAvBCG,oBAAU,WACRC,IAAMC,IAAI,4HACVC,KAAK,SAAAC,GACJjB,EAAWiB,EAAIC,SAKhB,IAgBDtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,4BAECF,EAAAC,EAAAC,cAACqD,EAAD,CAAWxD,SAjBC,SAAAyD,GACbhB,EAAUgB,EAAEC,OAAOC,OACnBd,EAAiBpB,EAAQmC,OAAO,SAAAjC,GAAG,OAAIA,EAAIkC,KAAKC,cAAcnD,SAAS6B,EAAOsB,kBACvD,KAAnBL,EAAEC,OAAOC,MACXV,GAAY,GAEZA,GAAY,MAYZD,EAAW/C,EAAAC,EAAAC,cAAC4D,EAAD,CAAStC,QAASA,IAAaxB,EAAAC,EAAAC,cAAC4D,EAAD,CAAStC,QAASmB,MChCnDoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAV,EAAA,GAAAJ,KAAAc,EAAAC,KAAA,UAAqBf,KAAK,SAAAtD,GAAiD,IAA9CsE,EAA8CtE,EAA9CsE,OAAQC,EAAsCvE,EAAtCuE,OAAQC,EAA8BxE,EAA9BwE,OAAQC,EAAsBzE,EAAtByE,OAAQC,EAAc1E,EAAd0E,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7E,EAAAC,EAAAC,cAACF,EAAAC,EAAM6E,WAAP,KACE9E,EAAAC,EAAAC,cAAC6E,EAAD,QAOJhB","file":"static/js/main.19680b69.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst SearchBar = ({onChange}) => {\r\n \r\n\r\n  \r\n\r\n  return (\r\n    <div className='searchBar'>\r\n        \r\n        <input  className='input' type=\"text\" onChange={onChange} placeholder='Find Crypto...'/>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\n\r\nconst Crypto = ({crypto}) => {\r\n  const percent = crypto.price_change_percentage_24h+\"\";\r\n  var color = (percent.includes('-') ? 'red' : 'green');\r\n  console.log(crypto)\r\n  return (\r\n    <div className='crypto'>\r\n      <h3 className='rank'>{crypto.market_cap_rank}</h3>\r\n\r\n      <div className=\"description\">\r\n      <img src={crypto.image} alt=\"\" className='img'/>\r\n       <h3 className='name'>{crypto.id}</h3>\r\n      </div>\r\n     \r\n        <h4 >{crypto.symbol}</h4>\r\n        <h3 className='price'>${crypto.current_price.toLocaleString('en-US')}</h3>\r\n        <h3 className='upDown' style={{color:color}}>{crypto.price_change_percentage_24h}%</h3>\r\n        <h3 className='MC'>${crypto.market_cap.toLocaleString('en-US')}</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Crypto","import React from 'react'\r\nimport Crypto from './Crypto'\r\n\r\n\r\nconst Cryptos = ({cryptos}) => {\r\n    \r\n \r\n\r\n  return (\r\n    \r\n\r\n\r\n    <div className='cryptos'>\r\n   \r\n     {cryptos.map((cry, index) => (\r\n     \r\n        <Crypto key={index} crypto={cry}/>\r\n        \r\n      ))}\r\n        \r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cryptos","import React from 'react';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SearchBar from './components/SearchBar';\nimport Cryptos from './components/Cryptos';\n\n\n//https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\nfunction App() {\n\n  const [cryptos, setCryptos] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filteredCoins, setFilteredCoins] = useState([]);\n  const [allCoins, setAllCoins] = useState(true);\n\n   useEffect(() => {\n     axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res => {\n      setCryptos(res.data)\n     \n    \n    })\n    \n  }, [])\n\n  const change = e => {\n    setSearch(e.target.value);\n    setFilteredCoins(cryptos.filter(cry => cry.name.toLowerCase().includes(search.toLowerCase())))\n    if (e.target.value === ''){\n      setAllCoins(true)\n    }else{\n      setAllCoins(false)\n    }\n  }\n\n\n \n\n  return (\n    <div className=\"App\">\n    <h1>Crypto Tracker</h1>\n       \n     <SearchBar onChange = {change} />\n     {allCoins ? <Cryptos cryptos={cryptos}/> : <Cryptos cryptos={filteredCoins} />}\n   \n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}